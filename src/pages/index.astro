---
// 启用 SSR - 每次请求时动态渲染此页面
export const prerender = false;

import Layout from '~/layouts/PageLayout.astro';

import Hero from '~/components/widgets/Hero.astro';
import Content from '~/components/widgets/Content.astro';
import Projects from '~/components/widgets/Projects.astro';
import Sites from '~/components/widgets/Sites.astro';
import ParticleBackground from '~/components/ParticleBackground.astro';

import Modal from '~/components/Modal.astro';

// 导入图片
import heroImage from '~/assets/images/bg.webp';

// API 配置
const API_BASE_URL = 'https://api-g.lacs.cc/api';

// 获取项目数据
let projectsData: any[] = [];
try {
  const projectsResponse = await fetch(`${API_BASE_URL}/info-management/projects`);
  if (projectsResponse.ok) {
    const projectsResult = await projectsResponse.json();
    if (projectsResult.success && projectsResult.data) {
      projectsData = projectsResult.data;
      console.log('成功获取项目数据，共', projectsData.length, '条记录');
    } else {
      console.warn('项目 API 返回数据格式异常:', projectsResult);
    }
  } else {
    console.error('项目 API 响应错误:', projectsResponse.status, projectsResponse.statusText);
  }
} catch (error) {
  console.error('获取项目数据失败:', error);
}

// 获取站点数据
let sitesData: any[] = [];
try {
  const sitesResponse = await fetch(`${API_BASE_URL}/websites`);
  if (sitesResponse.ok) {
    const sitesResult = await sitesResponse.json();
    if (sitesResult.success && sitesResult.data && sitesResult.data.websites) {
      // 新的 API 结构：data.websites 包含站点数组
      sitesData = sitesResult.data.websites.map((site: any) => ({
        id: site.id,
        name: site.name,
        description: site.description || `访问 ${site.name}`,
        link: site.domain,
        logo: site.logo || '',
        iconContent: site.logo ? '' : site.name.charAt(0), // 如果没有 logo，使用首字母
        bgColor: site.category || '#3B82F6', // 默认蓝色
        analyticsEvent: `visit_${site.name.toLowerCase().replace(/\s+/g, '_')}`,
        category: site.category || '网站',
      }));
      console.log('成功获取站点数据，共', sitesData.length, '条记录');
      console.log('分页信息:', sitesResult.data.pagination);
    } else {
      console.warn('站点 API 返回数据格式异常:', sitesResult);
    }
  } else {
    console.error('站点 API 响应错误:', sitesResponse.status, sitesResponse.statusText);
  }
} catch (error) {
  console.error('获取站点数据失败:', error);
}

const metadata = {
  title: '领创工作室 - 数码科技与创意内容平台',
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata}>
  <!-- Hero Widget ******************* -->

  <Hero
    actions={[
      {
        variant: 'primary',
        text: '探索',
        href: '#projects',
        icon: 'tabler:rocket',
      },
      // {
      //   variant: 'secondary',
      //   text: '其他分站',
      //   href: '#sites',
      // },
      
      // { text: '关于我们', href: '/#about' },
    ]}
    image={{ src: heroImage, alt: '领创工作室团队展示' }}
    >
    <Fragment slot="bg">
      <ParticleBackground />
    </Fragment>
  </Hero>




  <!-- Projects Widget ****************** -->

  <Projects
    id="projects"
    title="我们的项目作品"
    subtitle="探索领创工作室开发的各类软件工具和创意项目"
    tagline="项目展示"
    projects={projectsData}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-blue-50 dark:bg-slate-800"></div>
    </Fragment>
  </Projects>



  <!-- Sites Widget ****************** -->

  <Sites
    id="sites"
    title="我们的分站平台"
    subtitle="探索领创工作室旗下的各个专业平台"
    tagline="分站导航"
    sites={sitesData}
  />

  <!-- About Widget ******************* -->

  <Content
    id="about"
    title="关于领创工作室"
    subtitle="我们是一个专注于数码科技领域的创新团队"
    tagline="关于我们"
    content="领创工作室成立于2020年，致力于为用户提供高质量的软件工具和技术解决方案。我们的团队由经验丰富的开发者、设计师和技术专家组成，专注于移动设备工具开发、软件开发和数字内容创作。"
    callToAction={{
      variant: 'primary',
      text: '联系我们',
      href: '/contact',
      icon: 'tabler:mail',
    }}
  />




  <!-- 模态框 -->
  <Modal />
</Layout>
